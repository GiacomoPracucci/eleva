{
	"info": {
		"_postman_id": "a651cde7-b25e-4900-a7c8-87e55261d7fc",
		"name": "El√©va",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40629432"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "registration",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"testuser2@example.com\",\n  \"username\": \"testuser2\",\n  \"full_name\": \"Test User 2\",\n  \"password\": \"testpassword123\",\n  \"academic_level\": \"University\",\n  \"bio\": \"Testing the API\",\n  \"show_profile_publicly\": false,\n  \"allow_ai_training\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva i token automaticamente nell'environment",
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Salva i token nelle variabili environment",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"    ",
									"    console.log(\"üéâ Token salvati nell'environment!\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testuser2",
									"type": "text"
								},
								{
									"key": "password",
									"value": "testpassword123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "get current user profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.environment.get(\"access_token\");",
									"console.log(\"üîç Token completo:\", token);",
									"",
									"if (token) {",
									"    try {",
									"        // Decodifica il payload del JWT (senza verifica della firma)",
									"        const payload = JSON.parse(atob(token.split('.')[1]));",
									"        console.log(\"üîç Token payload:\", payload);",
									"        console.log(\"üîç Scadenza:\", new Date(payload.exp * 1000));",
									"        console.log(\"üîç User ID:\", payload.sub);",
									"        console.log(\"üîç Token type:\", payload.type);",
									"    } catch (e) {",
									"        console.log(\"‚ùå Token malformato:\", e);",
									"    }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"full_name\": \"Updated Test User\",\n  \"academic_level\": \"Graduate\",\n  \"bio\": \"Updated bio for testing\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "subject",
			"item": [
				{
					"name": "create subject",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Mathematics 101\",\n  \"description\": \"Basic mathematics course\",\n  \"academic_year\": \"2024-2025\",\n  \"level\": \"Undergraduate\",\n  \"category\": \"Mathematics\",\n  \"color\": \"#4A90E2\",\n  \"icon\": \"calculator\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subjects/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subjects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get all subjects",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/subjects/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subjects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get specific subject",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/subjects/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subjects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "update subject",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Advanced Mathematics 101\",\n  \"description\": \"Updated description\",\n  \"is_active\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/subjects/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subjects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete subject",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/subjects/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subjects",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "health check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/health",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "root",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "refresh access token",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/refresh",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"refresh"
					]
				}
			},
			"response": []
		}
	]
}